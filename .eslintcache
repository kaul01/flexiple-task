[{"/Users/saiesh/Desktop/chatbox/src/index.js":"1","/Users/saiesh/Desktop/chatbox/src/reportWebVitals.js":"2","/Users/saiesh/Desktop/chatbox/src/App.js":"3"},{"size":501,"mtime":1610989220677,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610979393845,"results":"6","hashOfConfig":"5"},{"size":3638,"mtime":1610989294320,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1xe721n",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/saiesh/Desktop/chatbox/src/index.js",[],["16","17"],"/Users/saiesh/Desktop/chatbox/src/reportWebVitals.js",[],"/Users/saiesh/Desktop/chatbox/src/App.js",["18"],"import React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n\n  apiKey: \"AIzaSyDwqEqBPzLH4kPR_PEbVvA-xmNPYSKJ5u8\",\n    authDomain: \"saiesh-chat.firebaseapp.com\",\n    projectId: \"saiesh-chat\",\n    storageBucket: \"saiesh-chat.appspot.com\",\n    messagingSenderId: \"416144149501\",\n    appId: \"1:416144149501:web:83c2d441b2dfb6dcfbe794\",\n    measurementId: \"G-64WPEFRRRZ\"\n\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n     messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"\" />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\n\nexport default App;\n\n\n\n// rules_version = '2';\n// service cloud.firestore {\n//   match /databases/{database}/documents {\n//     match /{document=**} {\n//       allow read, write: if false;\n//     }\n    \n//     match /messages/{docId} {\n//     allow read : if request.auth.uid != null;\n//     allow create: if canCreateMessage();\n//     }\n    \n//     function canCreateMessage(){\n//     \t let isSignedIn = request.auth.uid != null;\n//        let isOwner = request.auth.uid == request.resource.data.uid;\n       \n//        let isNotBanned = exists(\n//        \t/database/$(database)/documents/banned/$(request.auth.uid)\n//        ) == false;\n//        return isSignedIn && isOwner && isNotBanned;\n//     }\n//   }\n// }",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":25,"column":7,"nodeType":"25","messageId":"26","endLine":25,"endColumn":16},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]